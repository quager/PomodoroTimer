<Window
    x:Class="PomodoroTimer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:PomodoroTimer.Resources"
    xmlns:local="clr-namespace:PomodoroTimer"
    mc:Ignorable="d"
    WindowStyle="None" Loaded="OnLoaded"
    Title="PomodoroTimer" Topmost="True" ShowInTaskbar="False" ShowActivated="False"
    Height="400" Width="300" MinHeight="400" MinWidth="300" MaxWidth="400" MaxHeight="500">

    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome
                        NonClientFrameEdges="None"
                        GlassFrameThickness="0"
                        ResizeBorderThickness="0 0 7 7"
                        CaptionHeight="0"
                        CornerRadius="0" />
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Window.Resources>
        <local:StateToBoolConverter x:Key="StateToBool"/>
        <local:StateToStringConverter x:Key="StateToString"/>
        <local:TimeConverter x:Key="TimeConverter"/>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}"/>
        </Style>
    </Window.Resources>

    <Border BorderBrush="Black" BorderThickness="1" Background="{DynamicResource MainBackground}">        
        <Grid Background="{DynamicResource MainBackground}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.RowSpan="2" x:Name="FlashingGrid" Background="#FFFF5000" Opacity="0"/>

            <Grid Margin="0 -1 0 0" Panel.ZIndex="10" MouseLeftButtonDown="OnMouseDown" Background="{DynamicResource WindowHeaderColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Button Margin="4 4 0 2" Click="OnShowSettings" Grid.Column="1" ToolTip="{x:Static res:Localization.Settings}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="Width" Value="18"/>
                            <Setter Property="Height" Value="18"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="9">
                                            <Image
                                                Stretch="UniformToFill"
                                                Source="Resources/Settings.png"
                                                Height="16" Width="16"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSettingsVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightSteelBlue" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Gray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                    Margin="4 4 0 -2"
                    Grid.Column="1"
                    Width="18" Height="20"
                    ToolTip="{x:Static res:Localization.Hide}"
                    HorizontalAlignment="Right" VerticalAlignment="Center"
                    Click="OnHideSettings">

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource MainBackground}"/>
                            <Setter Property="Visibility" Value="Hidden"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border
                                            CornerRadius="9 9 0 0"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}">

                                            <Path
                                                Data="M1,5 L6,0 11,5"
                                                StrokeThickness="3" Stroke="{DynamicResource TextControlForeground}"
                                                VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSettingsVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF98B8CD" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Gray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Margin="4 4 0 2" Click="OnSwitchTheme" Grid.Column="2" ToolTip="{x:Static res:Localization.SwitchTheme}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource MainBackground}"/>
                            <Setter Property="Width" Value="18"/>
                            <Setter Property="Height" Value="18"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="9">
                                            <Image
                                                Stretch="UniformToFill"
                                                Source="Resources/Theme.png"
                                                Height="16" Width="16"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Silver" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Gray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Margin="4 4 4 2" Grid.Column="3" Width="28" Padding="10 3" Click="OnHide">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="#DFFF0000"/>
                            <Setter Property="Foreground" Value="White"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}">

                                            <Path
                                                Data="M4,1 L8,5 12,1 15,4 11,8 15,12 12,15 8,11 4,15 1,12 5,8 1,4 4,1"
                                                Fill="{TemplateBinding Foreground}" Stroke="Black" StrokeThickness="0.5"
                                                VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFFF7D7D" />
                                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkRed"/>
                                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Gray"/>
                                    <Setter Property="Foreground" Value="WhiteSmoke" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <Grid Margin="10" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid Margin="5" DataContext="{Binding Timer}">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State, Converter={StaticResource StateToBool}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock 
                        Margin="5"
                        FontSize="20"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Foreground="{DynamicResource TextControlForeground}"
                        Text="{Binding State, Converter={StaticResource StateToString}}" />

                    <TextBlock 
                        Margin="5"
                        Grid.Row="1"
                        FontSize="36"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Text="{Binding TimeLeft, Converter={StaticResource TimeConverter}}" />

                    <ItemsControl
                        Margin="5"
                        Grid.Row="2"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        ItemsSource="{Binding Pomodoros}">
                        
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border
                                    Margin="5"
                                    Width="40"
                                    Height="40"
                                    CornerRadius="20">

                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderThickness" Value="3"/>
                                            <Setter Property="Background" Value="Tomato"/>
                                            <Setter Property="BorderBrush" Value="DarkRed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsFinished}" Value="True">
                                                    <Setter Property="Background" Value="Silver"/>
                                                    <Setter Property="BorderBrush" Value="Gray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>

                <Button
                    Margin="5"
                    Grid.Row="1"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Click="Start">

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{x:Static res:Localization.Start}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Width" Value="100"/>
                            <Setter Property="Height" Value="100"/>
                            <Setter Property="FontSize" Value="30"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFDDDDE0"/>
                                        <GradientStop Color="#FF5BBCFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border CornerRadius="50" BorderThickness=".5" BorderBrush="Black" Background="White">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="2" Color="#FF646464" BlurRadius="10" Opacity="0.7"/>
                                            </Border.Effect>
                                            <Border
                                                Margin="3"
                                                CornerRadius="50"
                                                BorderThickness=".5"
                                                BorderBrush="Black"
                                                Background="{TemplateBinding Background}">

                                                <ContentPresenter
                                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Content="{TemplateBinding Content}"/>
                                            </Border>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Timer.IsActive}" Value="True">
                                    <Setter Property="Content" Value="{x:Static res:Localization.Stop}"/>
                                </DataTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="FontSize" Value="32"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Reflect">
                                                <GradientStop Color="White"/>
                                                <GradientStop Color="#FF00A0FF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="FontSize" Value="30"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Reflect">
                                                <GradientStop Color="#FFA2BCCF"/>
                                                <GradientStop Color="#FF348CC9" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Reflect">
                                                <GradientStop Color="#FFA0A0A0" Offset="0" />
                                                <GradientStop Color="#FF8C8C8C" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Foreground" Value="WhiteSmoke" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <Border
                x:Name="SettingsPanel"
                Panel.ZIndex="5"
                Margin="10 -130 10 0"
                Grid.Row="1"
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                CornerRadius="0 0 5 5"
                BorderThickness="1 0 1 1"
                BorderBrush="DimGray"
                Background="{DynamicResource MainBackground}">
                
                <Border.Effect>
                    <DropShadowEffect Direction="270" ShadowDepth="2" BlurRadius="10" Color="#FF646464" Opacity="0.7"/>
                </Border.Effect>

                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5" Grid.Row="1" HorizontalAlignment="Right">
                        <Run Text="{x:Static res:Localization.TaskTime}" /><Run Text=":"/>
                    </TextBlock>

                    <Slider
                        Margin="5"
                        Grid.Row="1"
                        Grid.Column="1"
                        Value="{Binding TaskTime}"
                        Minimum="{Binding TaskMinTime}"
                        Maximum="{Binding TaskMaxTime}"/>

                    <TextBlock
                        Margin="5"
                        Grid.Row="1"
                        Grid.Column="2"
                        FontSize="14"
                        VerticalAlignment="Top"
                        Text="{Binding TaskTime, StringFormat={x:Static res:Localization.Minutes}}"/>

                    <TextBlock 
                        Margin="5"
                        Grid.Row="2"
                        HorizontalAlignment="Right"
                        Text="{x:Static res:Localization.LongPauseTime}" />

                    <Slider
                        Margin="5"
                        Grid.Row="2"
                        Grid.Column="1"
                        Value="{Binding LongPauseTime}"
                        Minimum="{Binding LongPauseMinTime}"
                        Maximum="{Binding LongPauseMaxTime}"/>

                    <TextBlock
                        Margin="5"
                        Grid.Row="2"
                        Grid.Column="2"
                        FontSize="14"
                        VerticalAlignment="Top"
                        Text="{Binding LongPauseTime, StringFormat={x:Static res:Localization.Minutes}}"/>

                    <TextBlock 
                        Margin="5"
                        Grid.Row="3"
                        HorizontalAlignment="Right"
                        Text="{x:Static res:Localization.Notification}" />

                    <Grid
                        Margin="5"
                        Grid.Row="3"
                        Grid.Column="1"
                        Grid.ColumnSpan="2">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Text="{Binding Notification}" Cursor="Arrow" />

                        <Button
                            Margin="-1 0 0 0"
                            Padding="4 0"
                            Grid.Column="1"
                            Content="..."
                            Click="SelectNotification"/>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
